{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/uday31in/compliant-workload/main/code/arm/",
            "metadata": {
                "description": "This is the link to the nested template that must to be accessible to ARM to be able to use as a part of nested deployment.
                                Please feel free to use template hosted here or override with choice of your location.
                                If you chose to do so, please ensure future bug fixes are incorporated from above location to your private location."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": ""
        },
        "prefix": {
            "type": "string",
            "defaultValue": "compliantstorage",
            "metadata": {
                "description": "description"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "westeurope",
            "metadata": {
                "description": "description"
            }
        },
        "userAssignedIdentityName": {
            "type": "string",
            "defaultValue": "compliant-storage-userAssignedIdentity",
            "metadata": {
                "description": "description"
            }
        },
        "userAssignedIdentityResourceGroup": {
            "type": "string",
            "defaultValue": "/subscriptions/22a8d224-e190-45c0-a936-f915ee2d8b16/resourceGroups/compliant-storage-resourcegroup",
            "metadata": {
                "description": "description"
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "/subscriptions/22a8d224-e190-45c0-a936-f915ee2d8b16/resourceGroups/compliant-storage-resourcegroup/providers/Microsoft.Network/virtualNetworks/compliant-storage-virtualNetworks/subnets/compliant-storage-virtualNetworks-subnet",
            "metadata": {
                "description": "description"
            }
        },
        "keyName": {
            "type": "string",
            "defaultValue": "cmk-key",
            "metadata": {
                "description": "description"
            }
        },
        "keyVaultUri": {
            "type": "string",
            "defaultValue": "https://compliant-storage-kv1.vault.azure.net/",
            "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "name-compliant-strorage": "[toLower(concat(parameters('prefix'),'9xyz'))]",
        "name-compliant-strorage-id": "[resourceId('Microsoft.Storage/storageAccounts',variables('name-compliant-strorage'))]",
        "name-compliant-strorage-pe": "[concat(parameters('prefix'),'-strorage-pe')]",
        "name-compliant-strorage-pe-id": "[resourceId('Microsoft.Network/privateEndpoints',variables('name-compliant-strorage-pe'))]",
        "userAssignedIdentity": "[extensionResourceId( parameters('userAssignedIdentityResourceGroup'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('name-compliant-strorage')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[format('{0}', variables('userAssignedIdentity'))]": {}
                }
            },
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": false,
                "allowCrossTenantReplication": false,
                "defaultToOAuthAuthentication": false,
                "allowedCopyScope": "AAD",
                "publicNetworkAccess": "Disabled",
                "isLocalUserEnabled": "false",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "deny",
                    "ipRules": []
                },
                "encryption": {
                    "requireInfrastructureEncryption": true,
                    "identity": {
                        "userAssignedIdentity": "[variables('userAssignedIdentity')]"
                    },
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        },
                        "table": {
                            "enabled": true,
                            "keyType": "Account"
                        },
                        "queue": {
                            "enabled": true,
                            "keyType": "Account"
                        }
                    },
                    "keySource": "Microsoft.Keyvault",
                    "keyvaultproperties": {
                        "keyname": "[parameters('keyName')]",
                        "keyvaulturi": "[parameters('keyvaulturi')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[variables('name-compliant-strorage-pe')]",
            "location": "westeurope",
            "dependsOn": [
                "[variables('name-compliant-strorage')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('name-compliant-strorage-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('name-compliant-strorage-id')]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[parameters('subnetId')]"
                }
            }
        }
    ],
    "outputs": {},
    "functions": []
}