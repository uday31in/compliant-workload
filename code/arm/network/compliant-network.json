{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/uday31in/compliant-workload/main/code/arm/",
            "metadata": {
                "description": "This is the link to the nested template that must to be accessible to ARM to be able to use as a part of nested deployment.
                                Please feel free to use template hosted here or override with choice of your location.
                                If you chose to do so, please ensure future bug fixes are incorporated from above location to your private location."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": ""
        },
        "prefix": {
            "type": "string",
            "defaultValue": "compliant-storage",
            "metadata": {
                "description": "description"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "westeurope",
            "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "name-compliant-virtualNetworks": "[concat(parameters('prefix'),'')]",
        "name-compliant-subnet": "[concat(variables('name-compliant-virtualNetworks'),'-subnet')]",
        "name-compliant-routeTable": "[concat(parameters('prefix'),'-routeTable')]",
        "name-compliant-networkSecurityGroup": "[concat(parameters('prefix'),'-networkSecurityGroup')]",
        "name-compliant-networkSecurityGroup-id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('name-compliant-networkSecurityGroup'))]",
        "name-compliant-networkSecurityGroup-name": "AzureBastionSubnet",
        "name-compliant-networkSecurityGroup-bastion": "AzureBastionSubnet-networkSecurityGroup",
        "name-compliant-networkSecurityGroup-bastion-id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('name-compliant-networkSecurityGroup-bastion'))]",
        "name-compliant-routeTable-id": "[resourceId('Microsoft.Network/routeTables',variables('name-compliant-routeTable'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2022-07-01",
            "name": "[variables('name-compliant-routeTable')]",
            "location": "[parameters('location')]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[variables('name-compliant-networkSecurityGroup')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-07-01",
            "name": "[variables('name-compliant-networkSecurityGroup-bastion')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHttpsInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowGatewayManagerInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLoadBalancerInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowBastionHostCommunicationInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSshRdpOutBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowAzureCloudCommunicationOutBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowBastionHostCommunicationOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowGetSessionInformationOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "destinationPortRanges": [
                                "80",
                                "443"
                            ],
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-07-01",
            "name": "[variables('name-compliant-virtualNetworks')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('name-compliant-networkSecurityGroup-id')]",
                "[variables('name-compliant-routeTable-id')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('name-compliant-subnet')]",
                        "type": "Microsoft.Network/virtualNetworks/subnets",
                        "properties": {
                            "addressPrefix": "10.1.1.0/25",
                            "networkSecurityGroup": {
                                "id": "[variables('name-compliant-networkSecurityGroup-id')]"
                            },
                            "routeTable": {
                                "id": "[variables('name-compliant-routeTable-id')]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('name-compliant-networkSecurityGroup-name')]",
                        "type": "Microsoft.Network/virtualNetworks/subnets",
                        "properties": {
                            "addressPrefix": "10.1.1.128/26",
                            "networkSecurityGroup": {
                                "id": "[variables('name-compliant-networkSecurityGroup-bastion-id')]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": true,
                "ddosProtectionPlan": {
                    "id": "/subscriptions/c62c2473-9d97-4014-a42c-dd41f1b3c5e7/resourceGroups/chase-ddos/providers/Microsoft.Network/ddosProtectionPlans/chase-ddos-westeurope"
                }
            }
        }
    ],
    "outputs": {
        "virtualNetworks": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('name-compliant-virtualNetworks') ))]"
        },
        "subnetId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name-compliant-virtualNetworks'), variables('name-compliant-subnet') )]"
        }
    },
    "functions": []
}