{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/uday31in/compliant-workload/main/",
            "metadata": {
                "description": "This is the link to the nested template that must to be accessible to ARM to be able to use as a part of nested deployment.
                                Please feel free to use template hosted here or override with choice of your location.
                                If you chose to do so, please ensure future bug fixes are incorporated from above location to your private location."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": ""
        },
        "prefix": {
            "type": "string",
            "defaultValue": "compliant-kv",
            "metadata": {
                "description": "description"
            }
        },
        "userAssignedIdentity": {
            "type": "string",
            "defaultValue": "50c5f50f-ca40-4672-913b-a6aa10d908ad",
            "metadata": {
                "description": "description"
            }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "5663f39e-feb1-4303-a1f9-cf20b702de61",
            "metadata": {
                "description": "description"
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "/subscriptions/22a8d224-e190-45c0-a936-f915ee2d8b16/resourceGroups/compliant-storage-resourcegroup/providers/Microsoft.Network/virtualNetworks/compliant-storage-virtualNetworks/subnets/compliant-storage-virtualNetworks-subnet",
            "metadata": {
                "description": "description"
            }
        },
        "cmkKeyName": {
            "type": "string",
            "defaultValue": "cmk-key",
            "metadata": {
                "description": "description"
            }
        },
        "keyExpiration": {
            "type": "int",
            "defaultValue": 1680564521,
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P30D'))]"
            }
        },
        "expiryTime": {
            "type": "int",
            "defaultValue": 1709484065,
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        },
        "timeAfterCreate": {
            "type": "int",
            "defaultValue": 1709484065,
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        },
        "timeBeforeExpiry": {
            "type": "int",
            "defaultValue": 1709484065,
            "metadata": {
                "description": "Expiration time of the key [dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]"
            }
        }
    },
    "variables": {
        "name-compliant-keyvault": "[concat(parameters('prefix'),'-kv1')]",
        "name-compliant-keyvault-id": "[resourceId('Microsoft.KeyVault/vaults',variables('name-compliant-keyvault'))]",
        "name-compliant-keyvault-pe": "[concat(parameters('prefix'),'-keyvault-pe')]",
        "name-compliant-keyvault-pe-id": "[resourceId('Microsoft.KeyVault/vaults',variables('name-compliant-keyvault'))]",
        "name-compliant-keyvault-cmk-name": "[format('{0}/{1}', variables('name-compliant-keyvault'), parameters('cmkKeyName'))]",
        "name-compliant-keyvault-cmk-id": "[resourceId('Microsoft.KeyVault/vaults/keys', variables('name-compliant-keyvault'), parameters('cmkKeyName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-11-01",
            "name": "[variables('name-compliant-keyvault')]",
            "location": "westeurope",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "keys": [
                                "unwrapKey",
                                "wrapKey",
                                "get"
                            ]
                        },
                        "objectId": "[parameters('userAssignedIdentity')]"
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "enablePurgeProtection": true,
                "vaultUri": "[concat('https://', 'compliant-kv2', '.vault.azure.net/')]",
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(deployment().name)]",
            "dependsOn": [
                "[variables('name-compliant-keyvault-id')]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]",
                "principalId": "[parameters('userAssignedIdentity')]"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[variables('name-compliant-keyvault-pe')]",
            "location": "westeurope",
            "dependsOn": [
                "[variables('name-compliant-keyvault-id')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('name-compliant-keyvault-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('name-compliant-keyvault-id')]",
                            "groupIds": [
                                "vault"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[parameters('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2021-10-01",
            "name": "[variables('name-compliant-keyvault-cmk-name')]",
            "dependsOn": [
                "[variables('name-compliant-keyvault-id')]"
            ],
            "properties": {
                "kty": "RSA",
                "keyOps": [],
                "keySize": 2048,
                "curveName": "P-256",
                "attributes": {
                    "enabled": true,
                    "exp": "[parameters('keyExpiration')]"
                },
                "rotationPolicy": {
                    "attributes": {
                        "expiryTime": "[parameters('expiryTime')]"
                    },
                    "lifetimeActions": [
                        {
                            "action": {
                                "type": "notify"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "cmkName": {
            "type": "string",
            "value": "[parameters('cmkKeyName')]"
        },
        "cmk": {
            "type": "object",
            "value": "[reference( variables('name-compliant-keyvault-cmk-id'))]"
        },
        "keyVault": {
            "type": "object",
            "value": "[reference( variables('name-compliant-keyvault-id'))]"
        }
    },
    "functions": []
}